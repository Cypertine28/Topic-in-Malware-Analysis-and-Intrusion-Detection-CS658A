import pandas as pd
import pickle
from androguard.core.bytecodes.apk import APK
import os
import numpy as np
df=pd.read_csv("permission/permission_final.csv")
df.columns.to_list()
default = open('permission/unique_per.txt','r').readlines()
permissions = [s.rstrip('\n') for s in default]
permissions
default = open('permission/permissions.txt','r').readlines()
perms = [s.rstrip('\n') for s in default]
for p in permissions:
    if p not in perms:
        perms.append(p)

#loading svm model
f=open('permission/model_svm_perm.pickle','rb')
svm_model=pickle.load(f)
f.close()

#loading RF model
f=open('permission/model_RF_perm.pickle','rb')
rf_model=pickle.load(f)
f.close()

filename = 'permission/perm_ann.h5'
loaded_model = pickle.load(open(filename, 'rb'))

def convert(apk):
    dataset_df12= pd.DataFrame(columns=perms)
    vector = {}
    a = APK(apk)
    perm = a.get_permissions()
    for d in perms:
        if d in perm:
            vector[d]=1
        else:
            vector[d]=0
    dataset_df23=dataset_df12.append(vector, ignore_index=True)
    return dataset_df23,perm


def classify(apk):
    test,perm=convert(apk)
    #according to svm
    svm_op=svm_model.predict(test)
    # print(svm_op)
    #according to RF
    rf_op=rf_model.predict(test)
    # print(rf_op)
    t=test.iloc[0].to_list()
    t=np.array(t)
    t=t.reshape(1,-1)
    # print(t.shape)
    t=loaded_model.predict(t)
    if t[0]>=0.8:
        ann_perm="Malign"
    else:
        ann_perm="Benign"
    # print(ann_perm)
    return svm_op,rf_op,perm,ann_perm


